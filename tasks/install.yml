# SPDX-FileCopyrightText: 2023 Nikita Chernyi
# SPDX-FileCopyrightText: 2024 Slavi Pantaleev
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Ensure Redmine paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
    mode: "0700"
    owner: "{{ redmine_uid }}"
    group: "{{ redmine_gid }}"
  with_items:
    - path: "{{ redmine_base_path }}"
      state: directory
      when: true
    - path: "{{ redmine_data_path }}"
      state: directory
      when: true
    - path: "{{ redmine_config_path }}"
      state: directory
      when: true
    - path: "{{ redmine_files_path }}"
      state: directory
      when: true
    - path: "{{ redmine_plugins_path }}"
      state: directory
      when: true
    - path: "{{ redmine_plugin_assets_path }}"
      state: directory
      when: true
    - path: "{{ redmine_theme_path }}"
      state: directory
      when: true
    - path: "{{ redmine_customized_container_src_path }}"
      state: directory
      when: "{{ redmine_container_image_customizations_enabled }}"
  when: item.when | bool

- name: Ensure Redmine support files installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/{{ item }}.j2"
    dest: "{{ redmine_base_path }}/{{ item }}"
    mode: "0640"
    owner: "{{ redmine_uid }}"
    group: "{{ redmine_gid }}"
  with_items:
    - env
    - labels

- name: Ensure Redmine configuration file installed
  ansible.builtin.copy:
    content: "{{ redmine_configuration | to_nice_yaml(indent=2) }}"
    dest: "{{ redmine_config_path }}/configuration.yml"
    mode: "0640"
    owner: "{{ redmine_uid }}"
    group: "{{ redmine_gid }}"

- name: Ensure other Redmine configuration files installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/config/{{ item }}.j2"
    dest: "{{ redmine_config_path }}/{{ item }}"
    mode: "0640"
    owner: "{{ redmine_uid }}"
    group: "{{ redmine_gid }}"
  with_items:
    - database.yml
    - secrets.yml
    - secret_token.rb

- name: Ensure db schema file exists
  ansible.builtin.file:
    path: "{{ redmine_config_path }}/db_schema.rb"
    state: touch
    mode: "0640"
    owner: "{{ redmine_uid }}"
    group: "{{ redmine_gid }}"

- name: Ensure Redmine container image is pulled via community.docker.docker_image
  when: devture_systemd_docker_base_container_image_pull_method == 'ansible-module'
  community.docker.docker_image:
    name: "{{ redmine_container_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ redmine_container_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else redmine_container_image_force_pull }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure Redmine container image is pulled via ansible.builtin.command
  when: devture_systemd_docker_base_container_image_pull_method == 'command'
  ansible.builtin.command:
    cmd: "{{ devture_systemd_docker_base_host_command_docker }} pull {{ redmine_container_image }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed
  changed_when: "'Downloaded newer image' in result.stdout"

- name: Run if container image customizations are enabled
  when: "redmine_container_image_customizations_enabled | bool"
  block:
    - name: Ensure Redmine Dockerfile is created
      ansible.builtin.template:
        src: "{{ role_path }}/templates/customizations/Dockerfile.j2"
        dest: "{{ redmine_customized_container_src_path }}/Dockerfile"
        owner: "{{ redmine_uid }}"
        group: "{{ redmine_gid }}"
        mode: "0640"
      register: redmine_container_image_customizations_dockerfile_result

    - name: Ensure customized container image for Redmine is built
      community.docker.docker_image:
        name: "{{ redmine_container_image_customized }}"
        source: build
        force_source: "{{ redmine_container_image_customizations_dockerfile_result.changed }}"
        build:
          dockerfile: Dockerfile
          path: "{{ redmine_customized_container_src_path }}"
          pull: true

- name: Ensure Redmine container network is created via community.docker.docker_network
  when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
  community.docker.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ redmine_container_network }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"

- name: Ensure Redmine container network is created via ansible.builtin.command
  when: devture_systemd_docker_base_container_network_creation_method == 'command'
  ansible.builtin.command:
    cmd: >-
      {{ devture_systemd_docker_base_host_command_docker }} network create
      {% if devture_systemd_docker_base_ipv6_enabled %}--ipv6{% endif %}
      {{ devture_systemd_docker_base_container_networks_driver_options_string }}
      {{ redmine_container_network }}
  register: network_creation_result
  changed_when: network_creation_result.rc == 0
  failed_when: network_creation_result.rc != 0 and 'already exists' not in network_creation_result.stderr

- name: Ensure Redmine systemd units are present
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/redmine{{ item }}.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ redmine_identifier }}{{ item }}"
    mode: "0644"
  with_items:
    - .service
    - -send-reminders.service
    - -send-reminders.timer

- name: Ensure Redmine recurring tasks systemd units are present
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/redmine{{ item }}.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ redmine_identifier }}{{ item }}"
    mode: "0644"
  when: redmine_recurring_tasks_enabled | bool
  with_items:
    - -recurring-tasks.service
    - -recurring-tasks.timer
